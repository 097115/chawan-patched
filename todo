reduce binary size:
- fbf for unifont
- init some JS APIs from byte-code compiled JS?
	* ones that return static values could just use a
	  defineProperty. e.g. most of navigator, parts of screen
charsets:
- set up some fuzzer
- use appropriate charsets in forms, urls, etc.
display:
- important: buffer list
	* either a buffer list buffer, or a buffer list popup menu. ideally
	  both.
- dark mode (basically max Y)
- tall chars? (cons: seems like it only works in XTerm)
config:
- important: config editor
- switch from table arrays to tables
- better siteconf URL matching
- $TERM-based display config
- better path handling (e.g. inline files, so we could get rid of css
  "include/inline" etc.)
- add per-scheme env var configuration (e.g.
  proto.gemini.known-hosts = '/some/path'; maybe also with inline JS?)
- add RPC for CGI scripts e.g. toggle settings/issue downloads/etc
	* also some way to set permissions for RPC calls
mailcap:
- save custom command?
- w3mmee extensions?
	* browsecap looks cleaner than urimethodmap, and would be
	  useful for mailto
		- it overlaps with siteconf quite a bit...
buffer:
- important: validate returned values
	* do not block container when receiving buffer data; if invalid, kill
	  buffer
	* this also includes not crashing when the buffer dies while
	  container is reading...
- color visited links
	* needs some sort of conditional formatting in pager, e.g. give
	  all Formats an id in buffer and send a list of "if URL
	  visited, change Format" commands
- configurable/better url filtering in loader
- when the log buffer crashes, print its contents to stderr
	* easiest way seems to be to just dump its cache file
- add buffer groups
- xhtml
pager:
- handle long lines
- save/edit buffer output
	* just reuse dump mode code
- alert on external command failure
- pipe copiousoutput, x-htmloutput stderr to console
network:
- uBO integration? (or at least implement filter lists)
- dict
- nntp
- websockets
javascript:
- support defining one function with multiple names (maybe with magic?)
- "this" value as JSValue
- distinguish double from unrestricted double
- better dom support: more events, CSSOM, ...
- ReadableStream
- separate console for each buffer
- buffer selection
layout:
- box borders
	* will probably need special treatment, as borders must round to
	  1ch in x direction and 1em in y direction.
	* table is high priority; for other boxes, I don't know if it
	  would work
- table layout: include caption in width calculation
- flexbox: align-self, align-items, justify-content, proper margin handling
- details element
- saturation arithmetic for LayoutUnit
	* easiest way: cast to 64-bit, then clamp
		- performance would be abysmal on 32-bit architectures,
		  better use nimAddInt there
- layout caching
	* sub-layout is done, now for reusing old trees
	* use memcmp/memcpy for sizes check?
	* non-root block too, if no floats exist?
- partial rendering
	* buffer.lines must go, so rewrite getCursorStyledNode and
	  findPrev/NextLink to use the box tree
		- also findPrevMatch/findNextMatch, but it's hard
		  without a line array... we can render it as we
		  go, but it will be slow
	* we must calculate the overflow box, but the current approach
	  is broken, easier to just set it as a property on render
	* inline layout's output must be flattened again, so that we can
	  deal with tall inline boxes (like the <plaintext> tag in
	  text/plain buffers)
- partial layout?
	* may be more trouble than it's worth... for pager-like
	  behavior, it's easier to just backpressure input
- frame, iframe
- z order
	* for positioned it's almost perfect, but can't do negative
	  z-index
	* for images it's straight up broken
	* background should overpaint text (<- but only fix this when
	  z-index fully works)
- grid
images:
- animation
man:
- add a DOM -> man page converter so that we do not depend on pandoc
  for man page conversion
tests:
- network/XHR (make net test async?)
- pager? (how?)
